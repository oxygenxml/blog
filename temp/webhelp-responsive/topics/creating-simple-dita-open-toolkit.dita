<?xml version="1.0" encoding="UTF-8"?><?workdir /D:\syncprojects\blog\temp\webhelp-responsive\topics?><?workdir-uri file:/D:/syncprojects/blog/temp/webhelp-responsive/topics/?><?path2project ..\?><?path2project-uri ../?><?path2rootmap-uri ../?><?doctype-public -//OASIS//DTD DITA Topic//EN?><?doctype-system topic.dtd?><topic xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="creating_simple_dita_open_toolkit" ditaarch:DITAArchVersion="1.3" domains="(topic abbrev-d) a(props deliveryTarget) (topic equation-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic mathml-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic svg-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" class="- topic/topic " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="topic:1;3:47" specializations="@props/deliveryTarget">
    <title class="- topic/title " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="title:1;4:12">Creating a simple DITA Open Toolkit plugin to customize published HTML and PDF content</title>
    <prolog class="- topic/prolog " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="prolog:1;5:13">
        <author class="- topic/author " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="author:1;6:17">Radu Coravu</author>
        <critdates class="- topic/critdates " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="critdates:1;7:20">
            <created date="2013-12-24" class="- topic/created " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="created:1;8:41"/>
        </critdates>
    </prolog>
    <body class="- topic/body " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="body:1;11:11">
        <p class="- topic/p " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="p:1;12:12"> I recently worked on a <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:1;12:39">DITA Open Toolkit</b> plugin which can be used to provide
            syntax highlight when publishing DITA <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:2;13:54">codeblock</b> elements to <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:3;13:83">HTML</b>-based or
                <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:4;14:20">PDF </b>outputs. </p>
        <p class="- topic/p " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="p:2;15:12">Based on this experience I've put together some steps to help anyone wanting to create an
                <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:5;16:20">XSLT</b> customization plugin for the <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:6;16:61">DITA Open Toolkit </b>for HTML and PDF
            based outputs. <ol id="ol_pzg_tvp_tkb" class="- topic/ol " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="ol:1;17:52">
                <li class="- topic/li " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="li:1;18:21">Create a folder for your plugin in the DITA OT <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:7;18:71">plugins</b> folder. The
                        <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:8;19:28">DITA OT</b> bundled with Oxygen can be found here:<i class="+ topic/ph hi-d/i " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="i:1;19:81">
                        OXYGEN_INSTALL_DIR/frameworks/dita/DITA-OT</i>. In my case I created the
                    following folder:<i class="+ topic/ph hi-d/i " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="i:2;21:41">
                        OXYGEN_INSTALL_DIR/frameworks/dita/DITA-OT/plugins/com.oxygenxml.highlight</i>.</li>
                <li class="- topic/li " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="li:2;23:21">Create a <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:9;23:33">plugin.xml</b> file in that folder containing the plugin's extension
                    points. In my case, the plugin descriptor file contains:
                    <codeblock outputclass="language-xml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="codeblock:1;25:59">&lt;plugin id="com.oxygenxml.highlight"&gt;
  &lt;feature extension="package.support.name" value="Oxygen XML Editor Support"/&gt;
  &lt;feature extension="package.support.email" value="support@oxygenxml.com"/&gt;
  &lt;feature extension="package.version" value="1.0.0"/&gt;
  &lt;feature extension="dita.xsl.xhtml" value="xhtmlHighlight.xsl" type="file"/&gt;
  &lt;feature extension="dita.xsl.xslfo" value="pdfHighlight.xsl" type="file"/&gt;
&lt;/plugin&gt;</codeblock>
                    The important extensions in it are the references to the XSLT stylesheets which
                    will be used to style the HTML and the PDF outputs. You can find a bunch of
                    other DITA OT plugin extension points here:<xref href="https://www.dita-ot.org/dev/extension-points/plugin-extension-points.html" format="html" scope="external" class="- topic/xref " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="xref:1;36:57"/>.</li>
                <li class="- topic/li " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="li:3;37:21"> Create an XSLT stylesheet called <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:10;37:58">xhtmlHighlight.xsl</b> located in the same
                    plugin folder. As I want to overwrite the creation of the HTML content from a
                    DITA <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:11;39:29">codeblock</b> element I will first need to find the XSLT template that I
                    need to overwrite. A DITA <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:12;40:50">codeblock</b> element has the <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:13;40:83">class</b>
                    attribute value "<b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:14;41:41">+ topic/pre pr-d/codeblock </b>". Usually in such cases I
                    take part of the class attribute value and search using the "<b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:15;42:85">Find/Replace in
                        Files</b>" Oxygen action in all of the DITA OT XSLT resources. In this case
                    I searched for <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:16;44:39">topic/pre</b>and found this XSLT
                        stylesheet:<i class="+ topic/ph hi-d/i " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="i:3;45:39">OXYGEN_INSTALL_DIR/frameworks/dita/DITA-OT/plugins/org.dita.xhtml/xsl/xslhtml/dita2htmlImpl.xsl</i>
                    containing this XSLT
                    template:<codeblock outputclass="language-xml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="codeblock:2;47:68">&lt;xsl:template match="*[contains(@class, ' topic/pre ')]" name="topic.pre"&gt;
  &lt;xsl:if test="contains(@frame, 'top')"&gt;&lt;hr /&gt;&lt;/xsl:if&gt;
  &lt;xsl:apply-templates select="*[contains(@class, ' ditaot-d/ditaval-startprop ')]" mode="out-of-line"/&gt;
  &lt;xsl:call-template name="spec-title-nospace"/&gt;
  &lt;pre&gt;
    &lt;xsl:attribute name="class" select="name()"/&gt;
    &lt;xsl:call-template name="commonattributes"/&gt;
    &lt;xsl:call-template name="setscale"/&gt;
    &lt;xsl:call-template name="setidaname"/&gt;
    &lt;xsl:apply-templates/&gt;
  &lt;/pre&gt;
  &lt;xsl:apply-templates select="*[contains(@class, ' ditaot-d/ditaval-endprop ')]" mode="out-of-line"/&gt;
  &lt;xsl:if test="contains(@frame, 'bot')"&gt;&lt;hr /&gt;&lt;/xsl:if&gt;&lt;xsl:value-of select="$newline"/&gt;
&lt;/xsl:template&gt;</codeblock> thus my <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:17;60:43">xhtmlHighlight.xsl </b>will overwrite
                    the content of the template
                    like:<codeblock outputclass="language-xml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="codeblock:3;62:64">&lt;xsl:template match="*[contains(@class, ' topic/pre ')]" name="topic.pre"&gt;
  &lt;xsl:if test="contains(@frame, 'top')"&gt;&lt;hr /&gt;&lt;/xsl:if&gt;
  &lt;xsl:apply-templates select="*[contains(@class, ' ditaot-d/ditaval-startprop ')]" mode="out-of-line"/&gt;
  &lt;xsl:call-template name="spec-title-nospace"/&gt;
  &lt;pre&gt;
    &lt;xsl:attribute name="class" select="name()"/&gt;
    &lt;xsl:call-template name="commonattributes"/&gt;
    &lt;xsl:call-template name="setscale"/&gt;
    &lt;xsl:call-template name="setidaname"/&gt;
     &lt;!--Here I'm calling the styler of the content inside the codeblock.--&gt;
     &lt;xsl:call-template name="outputStyling"/&gt;
  &lt;/pre&gt;
  &lt;xsl:apply-templates select="*[contains(@class, ' ditaot-d/ditaval-endprop ')]" mode="out-of-line"/&gt;
  &lt;xsl:if test="contains(@frame, 'bot')"&gt;&lt;hr /&gt;&lt;/xsl:if&gt;&lt;xsl:value-of select="$newline"/&gt;
&lt;/xsl:template&gt;</codeblock> and call another XSLT template which applies as a
                    Java extension the XSLTHL library to style the content. </li>
                <li class="- topic/li " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="li:4;78:21">Create an XSLT stylesheet called <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:18;78:57">pdfHighlight.xsl</b> located in the same
                    plugin folder which will contain the PDF XSLT customization. In this case I will
                    overwrite the XSLT template
                        from:<i class="+ topic/ph hi-d/i " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="i:4;81:33">OXYGEN_INSTALL_DIR/frameworks/dita/DITA-OT/plugins/org.dita.pdf2/xsl/fo/topic.xsl</i>
                    which has the
                    content:<codeblock outputclass="language-xml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="codeblock:4;83:67">    &lt;xsl:template match="*[contains(@class,' topic/pre ')]"&gt;
        &lt;xsl:call-template name="setSpecTitle"/&gt;
        &lt;fo:block xsl:use-attribute-sets="pre"&gt;
            &lt;xsl:call-template name="commonattributes"/&gt;
            &lt;xsl:call-template name="setFrame"/&gt;
            &lt;xsl:call-template name="setScale"/&gt;
            &lt;xsl:call-template name="setExpanse"/&gt;
            &lt;xsl:apply-templates/&gt;
        &lt;/fo:block&gt;
    &lt;/xsl:template&gt;</codeblock></li>
                <li class="- topic/li " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="li:5;93:21">
                    <p class="- topic/p " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="p:3;94:24">In order to install your plugin in the DITA OT you need to run the
                        integrator. In the Oxygen <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:19;95:54">Transformation Scenarios</b> view there is a
                            <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:20;96:32">Show all scenarios</b> action available in the drop down settings
                        button. Just check that and execute the transformation scenario called
                            <b class="+ topic/ph hi-d/b " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="b:21;98:32">Run DITA OT Integrator</b>. And that's it, your XSLT content will be
                        applied with priority when publishing both to XHTML-based and to PDF-based
                        outputs. </p>
                    <p class="- topic/p " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="p:4;101:24">Let's take now a look at what that misterious step (5) - running the
                        integrator to install the plugin - really did: <ul id="ul_w1w_wwp_tkb" class="- topic/ul " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="ul:1;102:96">
                            <li class="- topic/li " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="li:6;103:33"> In the XSLT
                                    stylesheet:<i class="+ topic/ph hi-d/i " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="i:5;104:51">OXYGEN_INSTALL_DIR/frameworks/dita/DITA-OT/plugins/org.dita.xhtml/xsl/dita2html-base.xsl</i>
                                a new import automatically
                                appeared:<codeblock outputclass="language-xml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="codeblock:5;106:80">&lt;xsl:import href="plugin:com.oxygenxml.highlight:xhtmlHighlight.xsl"/&gt;</codeblock>
                                This import is placed after all base imports and because of this it
                                has a higher priority. More about imported template precedence can
                                be found in the XSLT specs:<xref href="http://www.w3.org/TR/xslt#import" format="html" scope="external" class="- topic/xref " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="xref:2;111:55"/>.</li>
                            <li class="- topic/li " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="li:7;112:33"> Likewise, in the top-level stylesheets related to PDF publishing
                                    like:<i class="+ topic/ph hi-d/i " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="i:6;113:45">OXYGEN_INSTALL_DIR/frameworks/dita/DITA-OT/plugins/org.dita.pdf2/xsl/fo/topic2fo_shell.xsl</i>
                                a new import statement has
                                appeared:<codeblock outputclass="language-xml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="codeblock:6;115:80">&lt;xsl:import href="plugin:com.oxygenxml.highlight:pdfHighlight.xsl"/&gt;</codeblock></li>
                        </ul>Now you can take your plugin's folder and distribute it to anyone
                        having a DITA OT installation along with some simple installation notes.
                        Your customization will work as long as the templates you are overwriting
                        have not changed from one DITA OT distribution to the other. </p>
                    <p class="- topic/p " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="p:5;120:24">This video from the DITA OT Day 2018 in Rotterdam has also steps for
                        implementing a simple DITA OT plugin: <xref href="https://www.oxygenxml.com/events/2018/dita-ot_day.html#step_by_step_implementation_of_a_DITA" format="html" scope="external" class="- topic/xref " xtrf="file:/D:/syncprojects/blog/topics/creating-simple-dita-open-toolkit.dita" xtrc="xref:3;123:61"/>.</p>
                </li>
            </ol></p>
    </body>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:52;72:80" xtrf="file:/D:/syncprojects/blog/maps/dita-articles.ditamap"><link class="- topic/link " format="dita" href="../topics/dita_ot_publishing_customizations_overview.dita" mapclass="- map/topicref " role="parent" scope="local" type="topic" xtrc="topicref:29;42:102" xtrf="file:/D:/syncprojects/blog/maps/dita-articles.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Publishing Customizations</linktext></link></linkpool></related-links></topic>